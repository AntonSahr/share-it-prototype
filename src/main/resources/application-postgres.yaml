spring:
  config:
    activate:
      on-profile: postgres
  application:
    name: shareitcore
  security:
    oauth2:
      client:
        registration:
          #          google:
          #            client-id:     ${GOOGLE_CLIENT_ID}
          #            client-secret: ${GOOGLE_CLIENT_SECRET}
          #            scope:
          #              - openid
          #              - profile
          #              - email
          #            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
          github:
            client-id:     ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope:
              - read:user
              - user:email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          #          google:
          #            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
          #            token-uri:         https://www.googleapis.com/oauth2/v4/token
          #            user-info-uri:     https://www.googleapis.com/oauth2/v3/userinfo
          #            user-name-attribute: sub
          github:

            authorization-uri: https://github.com/login/oauth/authorize
            token-uri:         https://github.com/login/oauth/access_token
            user-info-uri:     https://api.github.com/user
            user-name-attribute: login


  datasource:
    url: jdbc:postgresql://localhost:5432/shareitdb
    username: shareit
    password: changeme
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update           # oder 'validate' bzw. 'none' bei Flyway/Liquibase
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        id:
          new_generator_mappings: true
logging:
  level:
    de.shareit: DEBUG

app:
  email: mein.name@gmail.com
  referer: http://localhost:8080

